# Numpy를 사용하여 단순 선형 회귀 모델을 학습시키는 코드

import numpy as np

# 훈련 데이터 준비
X = np.array([1, 2, 3, 4, 5])
y = np.array([2, 4, 5, 4, 5])

# 입력 데이터와 출력 데이터의 평균 계산
X_mean = np.mean(X)
y_mean = np.mean(y)

# 입력 데이터와 출력 데이터의 분산 계산
X_var = np.var(X)
y_var = np.var(y)

# 입력 데이터와 출력 데이터의 공분산 계산
cov = np.mean(X*y) - X_mean*y_mean

# 선형 회귀 모델 계수 계산
w = cov / X_var
b = y_mean - w*X_mean

# 모델 학습 결과 출력
print("회귀 계수 w:", w)
print("절편 b:", b)

# 1차원 입력 데이터와 해당 출력 데이터가 주어진 경우
     # 단순 선형 회귀 모델을 학습하고 회귀 계수와 절편을 출력
  
# 모델을 학습시키는 과정
# 1. 입력 데이터와 출력 데이터의 평균과 분산을 계산
# 2. 입력 데이터와 출력 데이터의 공분산을 계산
# 3. 회귀 계수와 절편을 계산

# Scikit-learn 라이브러리를 사용하지 않고 Numpy를 사용하여 선형 회귀 모델을 학습시키는 방법
# 단순한 경우에만 적용 가능
# 복잡한 모델이나 다차원 입력 데이터의 경우에는 Scikit-learn 라이브러리를 사용하는 것이 좋음
